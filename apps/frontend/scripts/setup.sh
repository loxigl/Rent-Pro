#!/bin/bash
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${YELLOW}=================================================${NC}"
echo -e "${YELLOW}üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ AvitoRentPro üöÄ${NC}"
echo -e "${YELLOW}=================================================${NC}"

# –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
ROOT_DIR=$(pwd)

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p docker/certbot/conf
mkdir -p docker/certbot/www

# 1. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ç–∫–µ–Ω–¥–∞
echo -e "\n${YELLOW}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ç–∫–µ–Ω–¥–∞...${NC}"
cd $ROOT_DIR/apps/backend

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
  echo -e "${YELLOW}üìÑ –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è –±—ç–∫–µ–Ω–¥–∞...${NC}"
  cp .env.sample .env
  echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
else
  echo -e "${YELLOW}üìÑ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è Python
if [ ! -d "venv" ]; then
  echo -e "${YELLOW}üêç –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ Python...${NC}"
  python -m venv venv
  echo -e "${GREEN}‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ${NC}"
else
  echo -e "${YELLOW}üêç –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
if [ -d "venv" ]; then
  echo -e "${YELLOW}üîÑ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ...${NC}"
  source venv/bin/activate

  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞...${NC}"
  pip install -r requirements.txt
  echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
fi

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo -e "\n${YELLOW}üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"
cd $ROOT_DIR/apps/frontend

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
  echo -e "${YELLOW}üìÑ –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"
  cp .env.sample .env
  echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
else
  echo -e "${YELLOW}üìÑ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ npm
echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"
npm install
echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"

# 3. –ó–∞–ø—É—Å–∫ docker-compose –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
echo -e "\n${YELLOW}üê≥ –ó–∞–ø—É—Å–∫ docker-compose –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${NC}"
cd $ROOT_DIR/docker

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ .env —Ñ–∞–π–ª–∞, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f .env ]; then
  echo -e "${YELLOW}üìÑ –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –¥–ª—è docker...${NC}"
  cp .env.sample .env
  echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
else
  echo -e "${YELLOW}üìÑ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º docker-compose
echo -e "${YELLOW}üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...${NC}"
docker-compose -f docker-compose.dev.yml up -d
echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
echo -e "\n${YELLOW}üóÉÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
docker-compose -f docker-compose.dev.yml exec backend alembic upgrade head
echo -e "${GREEN}‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã${NC}"

# –ó–∞–ø–æ–ª–Ω—è–µ–º –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
echo -e "\n${YELLOW}üß™ –ó–∞–ø–æ–ª–Ω—è–µ–º –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...${NC}"
docker-compose -f docker-compose.dev.yml exec backend python -m scripts.seed_data
echo -e "${GREEN}‚úÖ –ë–î –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏${NC}"

echo -e "\n${YELLOW}=================================================${NC}"
echo -e "${GREEN}‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${YELLOW}=================================================${NC}"
echo -e "${YELLOW}üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–ø—É—Å–∫—É:${NC}"
echo -e "${YELLOW}- –ë—ç–∫–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000${NC}"
echo -e "${YELLOW}- –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥–æ–π: cd ../apps/frontend && npm run dev${NC}"
echo -e "${YELLOW}- API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs${NC}"
echo -e "${YELLOW}- –ê–¥–º–∏–Ω–∫–∞ MinIO: http://localhost:9001${NC}"
echo -e "${YELLOW}=================================================${NC}"
#!/bin/bash
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${YELLOW}=================================================${NC}"
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ AvitoRentPro üöÄ${NC}"
echo -e "${YELLOW}=================================================${NC}"

# –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
ROOT_DIR=$(pwd)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ docker
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.${NC}"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é docker
cd ${ROOT_DIR}/docker

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}üìÑ –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑ .env.sample...${NC}"
    cp .env.sample .env
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º docker-compose
echo -e "${YELLOW}üê≥ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...${NC}"
docker-compose -f docker-compose.dev.yml up -d
echo -e "${GREEN}‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã${NC}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
echo -e "${YELLOW}üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π...${NC}"
MIGRATION_STATUS=$(docker-compose -f docker-compose.dev.yml exec -T backend alembic current 2>/dev/null || echo "No migration")

if [[ $MIGRATION_STATUS == *"No migration"* ]]; then
    echo -e "${YELLOW}üì¶ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...${NC}"
    docker-compose -f docker-compose.dev.yml exec -T backend alembic upgrade head
    echo -e "${GREEN}‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã${NC}"
else
    echo -e "${GREEN}‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
echo -e "${YELLOW}üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î...${NC}"
APARTMENT_COUNT=$(docker-compose -f docker-compose.dev.yml exec -T db psql -U postgres -d avitorentpro -c "SELECT COUNT(*) FROM apartment;" -t 2>/dev/null || echo "0")
APARTMENT_COUNT=$(echo $APARTMENT_COUNT | tr -d ' ')

if [[ $APARTMENT_COUNT == "0" || $APARTMENT_COUNT == *"does not exist"* ]]; then
    echo -e "${YELLOW}üß™ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...${NC}"
    docker-compose -f docker-compose.dev.yml exec -T backend python -m scripts.seed_data
    echo -e "${GREEN}‚úÖ –ë–î –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏${NC}"
else
    echo -e "${GREEN}‚úÖ –í –ë–î —É–∂–µ –µ—Å—Ç—å $APARTMENT_COUNT –∑–∞–ø–∏—Å–µ–π –∫–≤–∞—Ä—Ç–∏—Ä${NC}"
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é frontend –∏ –∑–∞–ø—É—Å–∫–∞–µ–º dev-—Å–µ—Ä–≤–µ—Ä
echo -e "${YELLOW}üîÑ –ó–∞–ø—É—Å–∫ frontend dev-—Å–µ—Ä–≤–µ—Ä–∞...${NC}"
cd ${ROOT_DIR}/apps/frontend

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo -e "${YELLOW}üìÑ –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑ .env.sample...${NC}"
    cp .env.sample .env
    echo -e "${GREEN}‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend...${NC}"
    npm install
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º dev-—Å–µ—Ä–≤–µ—Ä
echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ frontend dev-—Å–µ—Ä–≤–µ—Ä–∞...${NC}"
echo -e "${GREEN}‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—É—â–µ–Ω–æ!${NC}"
echo -e "${YELLOW}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL-–∞–¥—Ä–µ—Å–∞:${NC}"
echo -e "${YELLOW}- Frontend: http://localhost:3000${NC}"
echo -e "${YELLOW}- API: http://localhost:8000/api/v1${NC}"
echo -e "${YELLOW}- API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs${NC}"
echo -e "${YELLOW}- MinIO –∫–æ–Ω—Å–æ–ª—å: http://localhost:9001${NC}"
echo -e "${YELLOW}=================================================${NC}"
echo -e "${YELLOW}üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –∏ –∑–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ:${NC}"
echo -e "${YELLOW}   cd ${ROOT_DIR}/docker && docker-compose -f docker-compose.dev.yml down${NC}"
echo -e "${YELLOW}=================================================${NC}"

# –ó–∞–ø—É—Å–∫–∞–µ–º dev-—Å–µ—Ä–≤–µ—Ä –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ
npm run dev
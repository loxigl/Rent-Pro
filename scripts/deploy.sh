#!/bin/bash
set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function log() {
  echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫
function check_error() {
  if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
  fi
}

# –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
ROOT_DIR=$(pwd)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –¥–µ–ø–ª–æ—è
MODE=${1:-dev}
ENV_FILE="$ROOT_DIR/docker/.env"

log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –≤ —Ä–µ–∂–∏–º–µ: $MODE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker
if ! command -v docker &> /dev/null; then
  echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
if ! command -v docker-compose &> /dev/null; then
  echo -e "${RED}‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ENV —Ñ–∞–π–ª–∞
if [ ! -f "$ENV_FILE" ]; then
  log "üìÑ –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑ .env.sample"
  cp "$ROOT_DIR/docker/.env.sample" "$ENV_FILE"
  check_error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª .env"
  log "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω"
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
if [ "$MODE" == "prod" ]; then
  COMPOSE_FILE="$ROOT_DIR/docker/docker-compose.prod.yml"

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É SSL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
  if grep -q "DOMAIN=rent.example.ru" "$ENV_FILE"; then
    log "‚ö†Ô∏è –í .env —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–æ–º–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ DOMAIN –∏ CERTBOT_EMAIL"
  fi

  # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –¥–ª—è certbot –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
  mkdir -p "$ROOT_DIR/docker/certbot/conf"
  mkdir -p "$ROOT_DIR/docker/certbot/www"

  # –ó–∞–ø—É—Å–∫–∞–µ–º nginx –∏ certbot –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
  log "üîí –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
  DOMAIN=$(grep DOMAIN "$ENV_FILE" | cut -d '=' -f2)
  EMAIL=$(grep CERTBOT_EMAIL "$ENV_FILE" | cut -d '=' -f2)

  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
  if [ ! -d "$ROOT_DIR/docker/certbot/conf/live/$DOMAIN" ]; then
    log "üîÑ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º certbot..."
    docker-compose -f "$COMPOSE_FILE" up -d nginx
    docker-compose -f "$COMPOSE_FILE" run --rm certbot certonly --webroot --webroot-path=/var/www/certbot \
      --email "$EMAIL" --agree-tos --no-eff-email -d "$DOMAIN" --force-renewal
    check_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    docker-compose -f "$COMPOSE_FILE" restart nginx
  fi
else
  COMPOSE_FILE="$ROOT_DIR/docker/docker-compose.dev.yml"
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º docker-compose
log "üê≥ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ —Ä–µ–∂–∏–º–µ: $MODE"
docker-compose -f "$COMPOSE_FILE" up -d
check_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"

# –î–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
log "‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 10

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
log "üóÉÔ∏è –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
if [ "$MODE" == "prod" ]; then
  docker-compose -f "$COMPOSE_FILE" exec -T backend alembic upgrade head
else
  docker-compose -f "$COMPOSE_FILE" exec -T backend alembic upgrade head
fi
check_error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î (—Ç–æ–ª—å–∫–æ –¥–ª—è dev)
if [ "$MODE" == "dev" ]; then
  log "üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
  APARTMENT_COUNT=$(docker-compose -f "$COMPOSE_FILE" exec -T db psql -U postgres -d avitorentpro -c "SELECT COUNT(*) FROM apartment;" -t 2>/dev/null || echo "0")
  APARTMENT_COUNT=$(echo $APARTMENT_COUNT | tr -d ' ')

  if [[ $APARTMENT_COUNT == "0" || $APARTMENT_COUNT == *"does not exist"* ]]; then
    log "üß™ –ó–∞–ø–æ–ª–Ω—è–µ–º –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
    docker-compose -f "$COMPOSE_FILE" exec -T backend python -m scripts.seed_data
    check_error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ë–î —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"
  else
    log "‚úÖ –í –ë–î —É–∂–µ –µ—Å—Ç—å $APARTMENT_COUNT –∑–∞–ø–∏—Å–µ–π"
  fi
fi

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MinIO
log "üì¶ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MinIO"
MINIO_BUCKET=$(grep MINIO_BUCKET "$ENV_FILE" | cut -d '=' -f2)
INIT_MINIO=$(docker-compose -f "$COMPOSE_FILE" exec -T minio mkdir -p /data/$MINIO_BUCKET 2>/dev/null || echo "already exists")

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
echo -e "${GREEN}=================================================${NC}"
echo -e "${GREEN}‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω –≤ —Ä–µ–∂–∏–º–µ: $MODE${NC}"
echo -e "${GREEN}=================================================${NC}"

if [ "$MODE" == "prod" ]; then
  echo -e "${YELLOW}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:${NC}"
  echo -e "${YELLOW}- –°–∞–π—Ç: https://$DOMAIN${NC}"
  echo -e "${YELLOW}- API: https://$DOMAIN/api${NC}"
else
  echo -e "${YELLOW}üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:${NC}"
  echo -e "${YELLOW}- Frontend: http://localhost:3000${NC}"
  echo -e "${YELLOW}- API: http://localhost:8000/api/v1${NC}"
  echo -e "${YELLOW}- API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs${NC}"
  echo -e "${YELLOW}- MinIO –∫–æ–Ω—Å–æ–ª—å: http://localhost:9001${NC}"
fi

echo -e "${YELLOW}üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: make stop-${MODE}${NC}"
echo -e "${GREEN}=================================================${NC}"